name: Deploy to Server

on:
  push:
    branches:
      - main # The branch to trigger the deployment when you push a commit to it

jobs:
  deploy:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.13.0 # Ensure Node.js version is compatible with your Angular project

      - name: Install dependencies
        run: npm install # Install dependencies in the workflow environment

      - name: Install Angular CLI
        run: npm install -g @angular/cli # Install Angular CLI in the workflow environment

      - name: Build Angular app
        run: ng build --configuration production


      - name: Remove Files on Nginx Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }} 
          username: ${{ secrets.SERVER_USERNAME }} 
          password: ${{ secrets.SERVER_PASSWORD }}
          script: rm -rf /var/www/devgains.com/angular/* # Specify the path of the target folder on the server (e.g., /var/www/html/front/*)

      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }} 
          username: ${{ secrets.SERVER_USERNAME }} 
          password: ${{ secrets.SERVER_PASSWORD }}
          source: ${{ github.workspace }}/dist
          target: /var/www/devgains.com/angular/ # Specify the path of the target folder on the server (e.g., /var/www/html/front/)
          strip_components: 2# Removes a specified number of directory components (folders) from the beginning of a file path.
                             # This can be used to deploy only specific folders and files.

      - name: Restart Nginx Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }} 
          username: ${{ secrets.SERVER_USERNAME }} 
          password: ${{ secrets.SERVER_PASSWORD }}
          script: systemctl restart nginx.service # Restart the Nginx service